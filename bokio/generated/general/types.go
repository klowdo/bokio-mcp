//go:build !ignore

// Package general provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.16.3 DO NOT EDIT.
package general

import (
	"encoding/json"

	openapi_types "github.com/oapi-codegen/runtime/types"
)

const (
	Access_tokenScopes = "access_token.Scopes"
	Client_authScopes  = "client_auth.Scopes"
	TokenAuthScopes    = "tokenAuth.Scopes"
)

// Defines values for ConnectionType.
const (
	ConnectionTypeCompany ConnectionType = "company"
)

// Defines values for TokenTenantType.
const (
	TokenTenantTypeCompany TokenTenantType = "company"
	TokenTenantTypeGeneral TokenTenantType = "general"
)

// Defines values for AuthorizeParamsResponseType.
const (
	Code AuthorizeParamsResponseType = "code"
)

// Defines values for AuthorizeParamsBokioTenanttype.
const (
	Company AuthorizeParamsBokioTenanttype = "company"
)

// Defines values for RequestTokenFormdataBodyGrantType.
const (
	AuthorizationCode RequestTokenFormdataBodyGrantType = "authorization_code"
	ClientCredentials RequestTokenFormdataBodyGrantType = "client_credentials"
	RefreshToken      RequestTokenFormdataBodyGrantType = "refresh_token"
)

// Connection defines model for connection.
type Connection struct {
	Id       *openapi_types.UUID `json:"id,omitempty"`
	TenantId *openapi_types.UUID `json:"tenantId,omitempty"`

	// Type The type of connection (e.g., company)
	Type *ConnectionType `json:"type,omitempty"`
}

// ConnectionType The type of connection (e.g., company)
type ConnectionType string

// PagedResponse defines model for pagedResponse.
type PagedResponse struct {
	CurrentPage *int32 `json:"currentPage,omitempty"`
	TotalItems  *int32 `json:"totalItems,omitempty"`
	TotalPages  *int32 `json:"totalPages,omitempty"`
}

// Token defines model for token.
type Token struct {
	AccessToken *string `json:"access_token,omitempty"`
	ExpiresIn   *int32  `json:"expires_in,omitempty"`

	// RefreshToken Returned for authorization_code and refresh_token grant types. The client_credentials grant expected that refresh are done by making another `/token` request with client_credentials grant.
	RefreshToken *string `json:"refresh_token,omitempty"`

	// TenantId The id for the tenant that for this token. This field will be empty when the tenant_type is `general`
	TenantId *openapi_types.UUID `json:"tenant_id,omitempty"`

	// TenantType The type of tenant that for this token.
	TenantType *TokenTenantType `json:"tenant_type,omitempty"`
	TokenType  *string          `json:"token_type,omitempty"`
}

// TokenTenantType The type of tenant that for this token.
type TokenTenantType string

// AuthorizeParams defines parameters for Authorize.
type AuthorizeParams struct {
	// ResponseType The response type for the authorization request
	ResponseType AuthorizeParamsResponseType `form:"response_type" json:"response_type"`

	// ClientId The client ID for the authorization request
	ClientId openapi_types.UUID `form:"client_id" json:"client_id"`

	// RedirectUri The URI to redirect the user to after authorization. Must match one of the redirect URIs registered for the client.
	RedirectUri string `form:"redirect_uri" json:"redirect_uri"`

	// Scope The scope for the authorization request
	Scope *string `form:"scope,omitempty" json:"scope,omitempty"`

	// State An opaque value used by the client to maintain state between the request and callback. Required as protection against CSRF (cross-site request forgery) attacks.
	State string `form:"state" json:"state"`

	// BokioTenantid The Bokio tenant ID to authorize the integration to have access. Bokioio company ID will be the teant ID when the tenant_type is `company`.
	BokioTenantid *openapi_types.UUID `form:"bokio_tenantid,omitempty" json:"bokio_tenantid,omitempty"`

	// BokioTenanttype The Bokio tenant type to authorize the integration to have access. Currently support only `company` tenant type.
	BokioTenanttype *AuthorizeParamsBokioTenanttype `form:"bokio_tenanttype,omitempty" json:"bokio_tenanttype,omitempty"`
}

// AuthorizeParamsResponseType defines parameters for Authorize.
type AuthorizeParamsResponseType string

// AuthorizeParamsBokioTenanttype defines parameters for Authorize.
type AuthorizeParamsBokioTenanttype string

// RequestTokenFormdataBody defines parameters for RequestToken.
type RequestTokenFormdataBody struct {
	// GrantType The grant type for the token request
	GrantType RequestTokenFormdataBodyGrantType `form:"grant_type" json:"grant_type"`
	union     json.RawMessage
}

// RequestTokenFormdataBodyGrantType defines parameters for RequestToken.
type RequestTokenFormdataBodyGrantType string

// RequestTokenFormdataBody0 defines parameters for RequestToken.
type RequestTokenFormdataBody0 struct {
	// Code The authorization code received from the authorization server (required for authorization_code grant type)
	Code      string      `json:"code"`
	GrantType interface{} `json:"grant_type"`

	// RedirectUri The redirect URI used in the authorization request (required for authorization_code grant type)
	RedirectUri string `json:"redirect_uri"`
}

// RequestTokenFormdataBody1 defines parameters for RequestToken.
type RequestTokenFormdataBody1 struct {
	GrantType interface{} `json:"grant_type"`

	// RefreshToken The refresh token received from a previous token request (required for refresh_token grant type)
	RefreshToken string `json:"refresh_token"`
}

// RequestTokenFormdataBody2 defines parameters for RequestToken.
type RequestTokenFormdataBody2 struct {
	GrantType interface{} `json:"grant_type"`
}

// GetConnectionsParams defines parameters for GetConnections.
type GetConnectionsParams struct {
	// ContentType The scope for the authorization request
	ContentType *string `json:"Content-Type,omitempty"`
}

// RequestTokenFormdataRequestBody defines body for RequestToken for application/x-www-form-urlencoded ContentType.
type RequestTokenFormdataRequestBody RequestTokenFormdataBody
